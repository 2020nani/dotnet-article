// <auto-generated />
using System;
using FirstApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FirstApi.Migrations
{
    [DbContext(typeof(SystemDbContext))]
    [Migration("20240728181009_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FirstApi.Domain.Entities.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double?>("PaymentTotal")
                        .IsRequired()
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Employers", (string)null);
                });

            modelBuilder.Entity("FirstApi.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("FirstApi.Domain.Entities.Employer", b =>
                {
                    b.OwnsOne("FirstApi.Domain.ValueObjects.Payment", "Payment", b1 =>
                        {
                            b1.Property<int>("EmployerId")
                                .HasColumnType("integer");

                            b1.Property<double>("Benefits")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("double precision")
                                .HasDefaultValue(0.0)
                                .HasColumnName("benefits");

                            b1.Property<double>("Salary")
                                .HasColumnType("double precision")
                                .HasColumnName("salary");

                            b1.HasKey("EmployerId");

                            b1.ToTable("Employers");

                            b1.WithOwner()
                                .HasForeignKey("EmployerId");
                        });

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("FirstApi.Domain.Entities.User", b =>
                {
                    b.OwnsOne("FirstApi.Domain.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("integer");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("bairro");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("cep");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("complemento");

                            b1.Property<string>("Localidade")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("localidade");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("logradouro");

                            b1.Property<string>("Uf")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("uf");

                            b1.Property<string>("Unidade")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("unidade");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
